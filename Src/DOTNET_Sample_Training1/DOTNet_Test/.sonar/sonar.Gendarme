<gendarme>
    <ruleset name="default">
        <rules include="DisableDebuggingCodeRule | CheckNewThreadWithoutStartRule | OnlyUseDisposeForIDisposableTypesRule | ObsoleteMessagesShouldNotBeEmptyRule | PreferEmptyInstanceOverNullRule | ConstructorShouldNotCallVirtualMethodsRule | AvoidAssemblyVersionMismatchRule | PreferSafeHandleRule | CloneMethodShouldNotReturnNullRule | ReplaceIncompleteOddnessCheckRule | AvoidCallingProblematicMethodsRule | EqualsShouldHandleNullArgRule | AvoidVisibleConstantFieldRule | DoNotForgetNotImplementedMethodsRule | ToStringShouldNotReturnNullRule | GetEntryAssemblyMayReturnNullRule | DoNotUseEnumIsAssignableFromRule | CheckNewExceptionWithoutThrowingRule | DoNotUseGetInterfaceToCheckAssignabilityRule" from="Gendarme.Rules.BadPractice.dll">
        </rules>
        <rules include="DoubleCheckLockingRule | DoNotUseLockedRegionOutsideMethodRule | DoNotLockOnThisOrTypesRule | DoNotLockOnWeakIdentityObjectsRule | ReviewLockUsedOnlyForOperationsOnVariablesRule | ProtectCallToEventDelegatesRule | DoNotUseMethodImplOptionsSynchronizedRule | WriteStaticFieldFromInstanceMethodRule | DoNotUseThreadStaticWithInstanceFieldsRule | NonConstantStaticFieldsShouldNotBeVisibleRule" from="Gendarme.Rules.Concurrency.dll">
        </rules>
        <rules include="DisposableFieldsShouldBeDisposedRule | ProvideValidXPathExpressionRule | AttributeStringLiteralsShouldParseCorrectlyRule | AvoidFloatingPointEqualityRule | UseValueInPropertySetterRule | AvoidConstructorsInStaticTypesRule | DoNotRecurseInEqualityRule | ReviewCastOnIntegerMultiplicationRule | ReviewInconsistentIdentityRule | ReviewDoubleAssignmentRule | ProvideCorrectRegexPatternRule | CallingEqualsWithNullArgRule | DoNotCompareWithNaNRule | EnsureLocalDisposalRule | EnsureLocalDisposalRule | FinalizersShouldCallBaseClassFinalizerRule | ProvideCorrectArgumentsToFormattingMethodsRule | MethodCanBeMadeStaticRule | ReviewUseOfInt64BitsToDoubleRule | ReviewUseOfModuloOneOnIntegersRule | ReviewCastOnIntegerDivisionRule | ReviewUselessControlFlowRule | BadRecursiveInvocationRule | ProvideValidXmlStringRule | ReviewSelfAssignmentRule | DoNotRoundIntegersRule" from="Gendarme.Rules.Correctness.dll">
        </rules>
        <rules include="ImplementGenericCollectionInterfacesRule | AvoidMethodWithUnusedGenericTypeRule | UseGenericEventHandlerRule | PreferGenericsOverRefObjectRule | DoNotExposeNestedGenericSignaturesRule" from="Gendarme.Rules.Design.Generic.dll">
        </rules>
        <rules include="AvoidExtensionMethodOnSystemObjectRule" from="Gendarme.Rules.Design.Linq.dll">
        </rules>
        <rules include="EnumsShouldDefineAZeroValueRule | DisposableTypesShouldHaveFinalizerRule | OperatorEqualsShouldBeOverloadedRule | TypesWithNativeFieldsShouldBeDisposableRule | DoNotDeclareVirtualMethodsInSealedTypeRule | AvoidVisibleNestedTypesRule | UseFlagsAttributeRule | ConsiderAddingInterfaceRule | ConsiderUsingStaticTypeRule | AvoidVisibleFieldsRule | ProvideAlternativeNamesForOperatorOverloadsRule | EnsureSymmetryForOverloadedOperatorsRule | AbstractTypesShouldNotHavePublicConstructorsRule | ConsiderConvertingFieldToNullableRule | ImplementIComparableCorrectlyRule | UseCorrectDisposeSignaturesRule | TypesWithDisposableFieldsShouldBeDisposableRule | ImplementEqualsAndGetHashCodeInPairRule | TypesShouldBeInsideNamespacesRule | ConsiderConvertingMethodToPropertyRule | MarkAssemblyWithComVisibleRule | MarkAssemblyWithCLSCompliantRule | ImplementICloneableCorrectlyRule | EnumsShouldUseInt32Rule | AttributeArgumentsShouldHaveAccessorsRule | DeclareEventHandlersCorrectlyRule | PreferIntegerOrStringForIndexersRule | MainShouldNotBePublicRule | MissingAttributeUsageOnCustomAttributeRule | OverrideEqualsMethodRule | FlagsShouldNotDefineAZeroValueRule | InternalNamespacesShouldNotExposeTypesRule | MarkAssemblyWithAssemblyVersionRule | PreferEventsOverMethodsRule | PreferXmlAbstractionsRule | AvoidRefAndOutParametersRule | AvoidPropertiesWithoutGetAccessorRule | AvoidMultidimensionalIndexerRule | DoNotDeclareProtectedMembersInSealedTypeRule | FinalizersShouldBeProtectedRule | AvoidSmallNamespaceRule" from="Gendarme.Rules.Design.dll">
        </rules>
        <rules include="AvoidArgumentExceptionDefaultConstructorRule | DoNotThrowInUnexpectedLocationRule | InstantiateArgumentExceptionCorrectlyRule | MissingExceptionConstructorsRule | DoNotSwallowErrorsCatchingNonSpecificExceptionsRule | ExceptionShouldBeVisibleRule | DoNotDestroyStackTraceRule | AvoidThrowingBasicExceptionsRule | DoNotThrowReservedExceptionRule" from="Gendarme.Rules.Exceptions.dll">
        </rules>
        <rules include="UseManagedAlternativesToPInvokeRule | GetLastErrorMustBeCalledRightAfterPInvokeRule | DoNotAssumeIntPtrSizeRule | MarshalBooleansInPInvokeDeclarationsRule | DelegatesPassedToNativeCodeMustIncludeExceptionHandlingRule | PInvokeShouldNotBeVisibleRule | MarshalStringsInPInvokeDeclarationsRule" from="Gendarme.Rules.Interoperability.dll">
        </rules>
        <rules include="AvoidComplexMethodsRule | ConsiderUsingStopwatchRule | AvoidDeepInheritanceTreeRule | AvoidUnnecessarySpecializationRule | PreferStringIsNullOrEmptyRule" from="Gendarme.Rules.Maintainability.dll">
        </rules>
        <rules include="DoNotPrefixValuesWithEnumNameRule | AvoidRedundancyInTypeNameRule | ParameterNamesShouldMatchOverriddenMethodRule | AvoidNonAlphanumericIdentifierRule | AvoidRedundancyInMethodNameRule | UseCorrectPrefixRule | UseCorrectCasingRule | UsePluralNameInEnumFlagsRule | DoNotUseReservedInEnumValueNamesRule | UseSingularNameInEnumsUnlessAreFlagsRule | DoNotPrefixEventsWithAfterOrBeforeRule" from="Gendarme.Rules.Naming.dll">
        </rules>
        <rules include="ImplementEqualsTypeRule | RemoveUnneededFinalizerRule | CompareWithEmptyStringEfficientlyRule | PreferLiteralOverInitOnlyFieldsRule | AvoidTypeGetTypeForConstantStringsRule | AvoidUnusedPrivateFieldsRule | UseSuppressFinalizeOnIDisposableTypeWithFinalizerRule | AvoidUnneededUnboxingRule | ConsiderCustomAccessorsForNonVisibleEventsRule | AvoidUnneededFieldInitializationRule | UseIsOperatorRule | MathMinMaxCandidateRule | PreferCharOverloadRule | ReviewLinqMethodRule | AvoidUninstantiatedInternalClassesRule | AvoidUnusedParametersRule | OverrideValueTypeDefaultsRule | DoNotIgnoreMethodResultRule | AvoidUnneededCallsOnStringRule | AvoidLargeStructureRule | AvoidLargeNumberOfLocalVariablesRule | RemoveUnusedLocalVariablesRule | AvoidUnsealedConcreteAttributesRule | UseStringEmptyRule | AvoidUncalledPrivateCodeRule | UseTypeEmptyTypesRule | AvoidReturningArraysOnPropertiesRule" from="Gendarme.Rules.Performance.dll">
        </rules>
        <rules include="SecureGetObjectDataOverridesRule | ReviewSealedTypeWithInheritanceDemandRule | DoNotReduceTypeSecurityOnMethodsRule | ReviewSuppressUnmanagedCodeSecurityUsageRule | DoNotExposeFieldsInSecuredTypeRule | AddMissingTypeInheritanceDemandRule | DoNotExposeMethodsProtectedByLinkDemandRule" from="Gendarme.Rules.Security.Cas.dll">
        </rules>
        <rules include="StaticConstructorsShouldBePrivateRule | DoNotShortCircuitCertificateCheckRule | ArrayFieldsShouldNotBeReadOnlyRule | NativeFieldsShouldNotBeVisibleRule" from="Gendarme.Rules.Security.dll">
        </rules>
        <rules include="MarkEnumerationsAsSerializableRule | MissingSerializableAttributeOnISerializableTypeRule | ImplementISerializableCorrectlyRule | CallBaseMethodsOnISerializableTypesRule | UseCorrectSignatureForSerializationMethodsRule | DeserializeOptionalFieldRule | MarkAllNonSerializableFieldsRule | MissingSerializationConstructorRule" from="Gendarme.Rules.Serialization.dll">
        </rules>
        <rules include="AvoidLongParameterListsRule | AvoidSwitchStatementsRule | AvoidLongMethodsRule" from="Gendarme.Rules.Smells.dll">
        </rules>
        <rules include="SystemWindowsFormsExecutableTargetRule | UseSTAThreadAttributeOnSWFEntryPointsRule" from="Gendarme.Rules.Ui.dll">
        </rules>
    </ruleset>
    <ruleset name="minor">
        <rules include="ObsoleteMessagesShouldNotBeEmptyRule | PreferEmptyInstanceOverNullRule" from="Gendarme.Rules.BadPractice.dll">
        </rules>
        <rules include="AvoidPropertiesWithoutGetAccessorRule" from="Gendarme.Rules.Design.dll">
        </rules>
        <rules include="UseManagedAlternativesToPInvokeRule" from="Gendarme.Rules.Interoperability.dll">
        </rules>
        <rules include="AvoidRedundancyInTypeNameRule | ParameterNamesShouldMatchOverriddenMethodRule | AvoidRedundancyInMethodNameRule | UsePluralNameInEnumFlagsRule" from="Gendarme.Rules.Naming.dll">
        </rules>
        <rules include="PreferCharOverloadRule | UseStringEmptyRule" from="Gendarme.Rules.Performance.dll">
        </rules>
        <rules include="ReviewSealedTypeWithInheritanceDemandRule | AddMissingTypeInheritanceDemandRule" from="Gendarme.Rules.Security.Cas.dll">
        </rules>
        <rules include="AvoidSwitchStatementsRule" from="Gendarme.Rules.Smells.dll">
        </rules>
    </ruleset>
    <ruleset name="major">
        <rules include="CheckNewThreadWithoutStartRule | OnlyUseDisposeForIDisposableTypesRule | ConstructorShouldNotCallVirtualMethodsRule | PreferSafeHandleRule | CloneMethodShouldNotReturnNullRule | ReplaceIncompleteOddnessCheckRule | EqualsShouldHandleNullArgRule | AvoidVisibleConstantFieldRule | DoNotForgetNotImplementedMethodsRule | ToStringShouldNotReturnNullRule | GetEntryAssemblyMayReturnNullRule | DoNotUseEnumIsAssignableFromRule | CheckNewExceptionWithoutThrowingRule | DoNotUseGetInterfaceToCheckAssignabilityRule" from="Gendarme.Rules.BadPractice.dll">
        </rules>
        <rules include="DoNotUseLockedRegionOutsideMethodRule | DoNotLockOnWeakIdentityObjectsRule | ReviewLockUsedOnlyForOperationsOnVariablesRule | ProtectCallToEventDelegatesRule | DoNotUseMethodImplOptionsSynchronizedRule | WriteStaticFieldFromInstanceMethodRule | DoNotUseThreadStaticWithInstanceFieldsRule | NonConstantStaticFieldsShouldNotBeVisibleRule" from="Gendarme.Rules.Concurrency.dll">
        </rules>
        <rules include="DisposableFieldsShouldBeDisposedRule | ProvideValidXPathExpressionRule | AvoidFloatingPointEqualityRule | UseValueInPropertySetterRule | AvoidConstructorsInStaticTypesRule | DoNotRecurseInEqualityRule | ReviewCastOnIntegerMultiplicationRule | ReviewInconsistentIdentityRule | ReviewDoubleAssignmentRule | ProvideCorrectRegexPatternRule | CallingEqualsWithNullArgRule | DoNotCompareWithNaNRule | EnsureLocalDisposalRule | FinalizersShouldCallBaseClassFinalizerRule | ProvideCorrectArgumentsToFormattingMethodsRule | MethodCanBeMadeStaticRule | ReviewUseOfInt64BitsToDoubleRule | ReviewUseOfModuloOneOnIntegersRule | ReviewCastOnIntegerDivisionRule | BadRecursiveInvocationRule | ProvideValidXmlStringRule | ReviewSelfAssignmentRule | DoNotRoundIntegersRule" from="Gendarme.Rules.Correctness.dll">
        </rules>
        <rules include="ImplementGenericCollectionInterfacesRule | AvoidMethodWithUnusedGenericTypeRule | UseGenericEventHandlerRule | PreferGenericsOverRefObjectRule | DoNotExposeNestedGenericSignaturesRule" from="Gendarme.Rules.Design.Generic.dll">
        </rules>
        <rules include="EnumsShouldDefineAZeroValueRule | DisposableTypesShouldHaveFinalizerRule | TypesWithNativeFieldsShouldBeDisposableRule | AvoidVisibleNestedTypesRule | UseFlagsAttributeRule | ConsiderAddingInterfaceRule | ConsiderUsingStaticTypeRule | ProvideAlternativeNamesForOperatorOverloadsRule | EnsureSymmetryForOverloadedOperatorsRule | AbstractTypesShouldNotHavePublicConstructorsRule | ConsiderConvertingFieldToNullableRule | ImplementIComparableCorrectlyRule | UseCorrectDisposeSignaturesRule | TypesWithDisposableFieldsShouldBeDisposableRule | MarkAssemblyWithComVisibleRule | MarkAssemblyWithCLSCompliantRule | ImplementICloneableCorrectlyRule | EnumsShouldUseInt32Rule | AttributeArgumentsShouldHaveAccessorsRule | DeclareEventHandlersCorrectlyRule | PreferIntegerOrStringForIndexersRule | MainShouldNotBePublicRule | MissingAttributeUsageOnCustomAttributeRule | FlagsShouldNotDefineAZeroValueRule | InternalNamespacesShouldNotExposeTypesRule | MarkAssemblyWithAssemblyVersionRule | PreferEventsOverMethodsRule | AvoidMultidimensionalIndexerRule | FinalizersShouldBeProtectedRule" from="Gendarme.Rules.Design.dll">
        </rules>
        <rules include="DoNotThrowInUnexpectedLocationRule | InstantiateArgumentExceptionCorrectlyRule | MissingExceptionConstructorsRule | ExceptionShouldBeVisibleRule" from="Gendarme.Rules.Exceptions.dll">
        </rules>
        <rules include="GetLastErrorMustBeCalledRightAfterPInvokeRule | DoNotAssumeIntPtrSizeRule | MarshalBooleansInPInvokeDeclarationsRule | DelegatesPassedToNativeCodeMustIncludeExceptionHandlingRule | PInvokeShouldNotBeVisibleRule | MarshalStringsInPInvokeDeclarationsRule" from="Gendarme.Rules.Interoperability.dll">
        </rules>
        <rules include="ConsiderUsingStopwatchRule | AvoidDeepInheritanceTreeRule | AvoidUnnecessarySpecializationRule | PreferStringIsNullOrEmptyRule" from="Gendarme.Rules.Maintainability.dll">
        </rules>
        <rules include="DoNotPrefixValuesWithEnumNameRule | AvoidNonAlphanumericIdentifierRule | UseCorrectPrefixRule | UseCorrectCasingRule | DoNotUseReservedInEnumValueNamesRule | UseSingularNameInEnumsUnlessAreFlagsRule | DoNotPrefixEventsWithAfterOrBeforeRule" from="Gendarme.Rules.Naming.dll">
        </rules>
        <rules include="ImplementEqualsTypeRule | RemoveUnneededFinalizerRule | CompareWithEmptyStringEfficientlyRule | PreferLiteralOverInitOnlyFieldsRule | AvoidTypeGetTypeForConstantStringsRule | AvoidUnusedPrivateFieldsRule | UseSuppressFinalizeOnIDisposableTypeWithFinalizerRule | AvoidUnneededUnboxingRule | ConsiderCustomAccessorsForNonVisibleEventsRule | AvoidUnneededFieldInitializationRule | UseIsOperatorRule | MathMinMaxCandidateRule | ReviewLinqMethodRule | AvoidUninstantiatedInternalClassesRule | OverrideValueTypeDefaultsRule | DoNotIgnoreMethodResultRule | AvoidLargeStructureRule | AvoidUnsealedConcreteAttributesRule | UseTypeEmptyTypesRule | AvoidReturningArraysOnPropertiesRule" from="Gendarme.Rules.Performance.dll">
        </rules>
        <rules include="SecureGetObjectDataOverridesRule | DoNotReduceTypeSecurityOnMethodsRule | DoNotExposeFieldsInSecuredTypeRule | DoNotExposeMethodsProtectedByLinkDemandRule" from="Gendarme.Rules.Security.Cas.dll">
        </rules>
        <rules include="StaticConstructorsShouldBePrivateRule | DoNotShortCircuitCertificateCheckRule | ArrayFieldsShouldNotBeReadOnlyRule | NativeFieldsShouldNotBeVisibleRule" from="Gendarme.Rules.Security.dll">
        </rules>
        <rules include="MarkEnumerationsAsSerializableRule | MissingSerializableAttributeOnISerializableTypeRule | ImplementISerializableCorrectlyRule | CallBaseMethodsOnISerializableTypesRule | UseCorrectSignatureForSerializationMethodsRule | DeserializeOptionalFieldRule | MarkAllNonSerializableFieldsRule | MissingSerializationConstructorRule" from="Gendarme.Rules.Serialization.dll">
        </rules>
        <rules include="SystemWindowsFormsExecutableTargetRule | UseSTAThreadAttributeOnSWFEntryPointsRule" from="Gendarme.Rules.Ui.dll">
        </rules>
    </ruleset>
    <ruleset name="critical">
        <rules include="DisableDebuggingCodeRule | AvoidCallingProblematicMethodsRule" from="Gendarme.Rules.BadPractice.dll">
        </rules>
        <rules include="DoubleCheckLockingRule | DoNotLockOnThisOrTypesRule" from="Gendarme.Rules.Concurrency.dll">
        </rules>
        <rules include="AttributeStringLiteralsShouldParseCorrectlyRule | EnsureLocalDisposalRule | ReviewUselessControlFlowRule" from="Gendarme.Rules.Correctness.dll">
        </rules>
        <rules include="AvoidExtensionMethodOnSystemObjectRule" from="Gendarme.Rules.Design.Linq.dll">
        </rules>
        <rules include="OperatorEqualsShouldBeOverloadedRule | DoNotDeclareVirtualMethodsInSealedTypeRule | AvoidVisibleFieldsRule | ImplementEqualsAndGetHashCodeInPairRule | ConsiderConvertingMethodToPropertyRule | OverrideEqualsMethodRule | PreferXmlAbstractionsRule | AvoidRefAndOutParametersRule | DoNotDeclareProtectedMembersInSealedTypeRule | AvoidSmallNamespaceRule" from="Gendarme.Rules.Design.dll">
        </rules>
        <rules include="AvoidArgumentExceptionDefaultConstructorRule | DoNotSwallowErrorsCatchingNonSpecificExceptionsRule | DoNotThrowReservedExceptionRule" from="Gendarme.Rules.Exceptions.dll">
        </rules>
        <rules include="AvoidComplexMethodsRule" from="Gendarme.Rules.Maintainability.dll">
        </rules>
        <rules include="AvoidUnusedParametersRule | AvoidUnneededCallsOnStringRule | AvoidLargeNumberOfLocalVariablesRule | RemoveUnusedLocalVariablesRule" from="Gendarme.Rules.Performance.dll">
        </rules>
        <rules include="ReviewSuppressUnmanagedCodeSecurityUsageRule" from="Gendarme.Rules.Security.Cas.dll">
        </rules>
        <rules include="AvoidLongParameterListsRule | AvoidLongMethodsRule" from="Gendarme.Rules.Smells.dll">
        </rules>
    </ruleset>
    <ruleset name="blocker">
        <rules include="AvoidAssemblyVersionMismatchRule" from="Gendarme.Rules.BadPractice.dll">
        </rules>
        <rules include="TypesShouldBeInsideNamespacesRule" from="Gendarme.Rules.Design.dll">
        </rules>
        <rules include="DoNotDestroyStackTraceRule | AvoidThrowingBasicExceptionsRule" from="Gendarme.Rules.Exceptions.dll">
        </rules>
        <rules include="AvoidUncalledPrivateCodeRule" from="Gendarme.Rules.Performance.dll">
        </rules>
    </ruleset>
</gendarme>